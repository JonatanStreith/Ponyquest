

    //IMPORTANT! REVISE A LOT OF THINGS so objects use "ID" instead of names, in case we want to use similar names for things.
    //No, that's bad.


    //      Add "spells" as an new class, make list. Can use "cast" command. Trixie may know some spells, and learn others.



    //Remember: GameFlags is a hashmap, get values through GameFlags.get("keyword");


    //It's possible to have creatures move around based on time parameters! Just have the location dependent on a time parameter; when asking for someone's location, just provide the time
    //and return a certain location matching that one! Could use a hashmap with time marks as keys!

    //Note: It is permissible to have secondary inputs. If a command needs more info, you can prompt for more lines. Good idea!

    //Definitely make a unique ID system.

    //Todo: Make function that checks attributes for inconsistencies and contradictions - i.e. "open" and "closed". Could be done with simple rules.

    //Oh yeah! Can probably put in limitations on what you can put into containers based on size, using Attributes! If it has "huge container" it can house
    "huge" items, or have a number, or something...

//    Build in an internal clock! Every turn advances one minute. Use to track how creatures react to things at certain times.
Also, have a "schedule" that makes creatures move to other locations at relevant times (i.e. at 3:00 Rarity and Spike go spelunking for jewels.)
//
//    Somehow make dialog dependent on location?

//
//    "Think about" command.
//
//    Add a tutorial - basically a multi-page guide to how to use commands. Can be displayed with "tutorial" or something.
//
//    Magic interface! Basically a command that leads to a continued loop (until you break it) where you can do in-depth magic commands. Possibly set up a magicParser() method.

//  Have text-content stored somewhere else. Load it with some function.
//
//    Train station! The train is a Stationary, use or "board" it will check if you have a ticket, then take you to that place. Better: boarding will list which tickets you have, and you have to choose destination! Then go there! Yeah, that's cool. (Train/ticket pony: "All Aboard").
//
//    "Discard" command. ASK IF PLAYER WANTS TO DO IT. Yeah, hardcore oldschool.
//


//  Set ResponseScript so it stores an arraylist of strings with each key - that way, we can have multiple scripts with each key!

//  TODO: Convert to ID for choosing where to go with "go to"! Probably a good idea to do so for all things.

    //May just want to have one class that handles spells. String list of available spells that dictate which you can actually cast.


    //Subclasses of StationaryObject: Vehicle, Producer. Vehicles can be used to travel. Producers can be used to produce an endless supply of things. (I.e. apple trees)

//  RunRespnseScript now returns boolean! So you can check that anything happened.

//  Command activate: Since that seems to vary from thing to thing, just have it connected to a responsescript.


Figure out some way to have overriding descriptions and additive descriptions.

"Tablet of Transmigration".

Figure out how to "cast" from items in your inventory. List of legit nouns needs to be updated accordingly.

//Set up nullchecks in jsonbuilder!

//Make a script that lets you move all followers. And one that lets you change their races.

    //May need "DefaultRace" and "DefaultLocation" and similar, if the game needs to restore things to normal. I.e. if a follower moves back through the mirror.

    //Spell: "Summon friends".
    //Creatures could have a "friend list" tracking which ones are their true friends. Because FiM.

    //Fill command: "fill bucket with apples".







    You could also have certain lines change their initDialog ref, so when you come back they talk differently. Like if you insulted them, they'll be mad.


Bring back "short name". Use for places where we need an abbreviated name. I'm tired of "You drop the Trixie's cape"...


    Figure out a way to prevent wearing multiple identicals (i.e. capes, for instance). Wearing a cape could give you the attribute "wears cape",
    but it needs to check what kind of item it is, so... tricky. Should work fairly flexibly, with a try.


    TODO: Add "type" to GenericObject. Like "cape", "food", "book", etc. Can be used for more strict typing.
    Like, you can't wear another cape if you're already wearing a cape. May be complicated, but interesting.


Idea: Trixie's wagon should be a StationaryObject, but you could enter it to get to an "inside" location. And you should be able to move it to another location
by hitching it up. Specify where you want to move it, and it goes. But moving the wagon would require changing how the exit is bounded.

Change how runResponseScripts() is built - have it take more than just one argument. Utilize varargs to make everything after the first one into an array of arguments.

If you pick "hitch wagon", you get to specify a destination. (Have it check if it's outside or not - use Arguments for now, maybe use something else later)
Change the exit to the new ones.

Add "showFlags" to Gen.: Notices that are supposed to suffix objects when looked at, i.e. "Bucket (full), cape (worn)"


See if we can build a method that tries to "find a path" using exit binders...